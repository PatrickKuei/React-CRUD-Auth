{"version":3,"sources":["component/Home.js","context/auth.js","component/PrivateRoute.js","component/forms/AddUserForm.js","component/forms/EditUserForm.js","component/tables/UserTable.js","component/forms/AuthForm.js","component/Admin.js","pages/Login.js","pages/Signup.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","AuthContext","createContext","useAuth","useContext","PrivateRoute","Component","component","rest","authTokens","render","to","AddUserForm","addUser","handleClick","initialFormState","id","gameId","name","username","joinTime","identity","useState","user","setUser","handleInputChange","event","target","value","onSubmit","preventDefault","type","placeholder","onChange","onClick","className","EditUserForm","currentUser","useEffect","updateUser","setEditing","UserTable","users","length","map","key","replace","editRow","deleteUser","colSpan","Card","styled","div","Form","Input","input","Button","button","Error","img","Admin","setUsers","setCurrentUser","editing","show","setShow","setAuthTokens","style","width","position","backgroundColor","top","left","border","updatedUser","filter","Login","isLoggedIn","setLoggedIn","isError","userName","setUserName","password","setPassword","e","console","log","Signup","App","localStorage","clear","existingTokens","JSON","parse","getItem","Provider","data","setItem","stringify","exact","path","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.daa5513c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Home(props) {\r\n  return <div>Home Page</div>;\r\n}\r\n\r\nexport default Home;\r\n","import { createContext, useContext } from \"react\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"../context/auth\";\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n  const { authTokens } = useAuth();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        authTokens ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default PrivateRoute;\r\n","import React, { useState } from \"react\";\r\n\r\nconst AddUserForm = ({ addUser, handleClick }) => {\r\n  const initialFormState = {\r\n    id: null,\r\n    gameId: \"\",\r\n    name: \"\",\r\n    username: \"\",\r\n    joinTime: \"\",\r\n    identity: \"\",\r\n  };\r\n  const [user, setUser] = useState(initialFormState);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(event) => {\r\n        event.preventDefault();\r\n        if (!user.name || !user.username) return;\r\n        handleClick();\r\n        addUser(user);\r\n        setUser(initialFormState);\r\n      }}\r\n    >\r\n      <label>遊戲ID</label>\r\n      <input\r\n        type=\"number\"\r\n        name=\"gameId\"\r\n        value={user.gameId}\r\n        placeholder={\"number only\"}\r\n        onChange={handleInputChange}\r\n      />\r\n      <label>LINE名稱</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={user.name}\r\n        placeholder={\"Tania\"}\r\n        onChange={handleInputChange}\r\n      />\r\n\r\n      <label>LINE ID</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"username\"\r\n        value={user.username}\r\n        placeholder={\"floppydiskette\"}\r\n        onChange={handleInputChange}\r\n      />\r\n      <label>入會時間</label>\r\n      <input\r\n        type=\"datetime-local\"\r\n        name=\"joinTime\"\r\n        value={user.joinTime}\r\n        placeholder={\"1995-12-17 03:24\"}\r\n        onChange={handleInputChange}\r\n      />\r\n      <label>身分</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"identity\"\r\n        value={user.identity}\r\n        placeholder={\"股東/會長\"}\r\n        onChange={handleInputChange}\r\n      />\r\n      <button>Add new user</button>\r\n      <button\r\n        onClick={() => {\r\n          setUser(initialFormState);\r\n          handleClick();\r\n        }}\r\n        className=\"button muted-button\"\r\n      >\r\n        Cancel\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddUserForm;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst EditUserForm = (props) => {\r\n  const [user, setUser] = useState(props.currentUser);\r\n\r\n  useEffect(() => {\r\n    setUser(props.currentUser);\r\n  }, [props]);\r\n  // You can tell React to skip applying an effect if certain values haven’t changed between re-renders. [ props ]\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(event) => {\r\n        event.preventDefault();\r\n        props.handleClick();\r\n        props.updateUser(user.id, user);\r\n      }}\r\n    >\r\n      <label>遊戲ID</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"gameId\"\r\n        value={user.gameId}\r\n        onChange={handleInputChange}\r\n      />\r\n      <label>LINE名稱</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={user.name}\r\n        onChange={handleInputChange}\r\n      />\r\n\r\n      <label>LINE ID</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"username\"\r\n        value={user.username}\r\n        onChange={handleInputChange}\r\n      />\r\n      <label>入會時間</label>\r\n      <input\r\n        type=\"datetime-local\"\r\n        name=\"joinTime\"\r\n        value={user.joinTime}\r\n        onChange={handleInputChange}\r\n      />\r\n      <label>身分</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"identity\"\r\n        value={user.identity}\r\n        onChange={handleInputChange}\r\n      />\r\n      <button>Update user</button>\r\n      <button\r\n        onClick={() => {\r\n          props.setEditing(false);\r\n          props.handleClick();\r\n        }}\r\n        className=\"button muted-button\"\r\n      >\r\n        Cancel\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditUserForm;\r\n","import React from \"react\";\r\n\r\nconst UserTable = (props) => (\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>遊戲ID</th>\r\n        <th>LINE名稱</th>\r\n        <th>LINE ID</th>\r\n        <th>入會時間</th>\r\n        <th>身分</th>\r\n        <th>管理</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {props.users.length > 0 ? (\r\n        props.users.map((user) => (\r\n          <tr key={user.id}>\r\n            <td>{user.gameId}</td>\r\n            <td>{user.name}</td>\r\n            <td>{user.username}</td>\r\n            <td>{user.joinTime.replace(\"T\", \" \")}</td>\r\n            <td>{user.identity}</td>\r\n            <td>\r\n              <button\r\n                onClick={() => {\r\n                  props.editRow(user);\r\n                  props.handleClick();\r\n                }}\r\n                className=\"button muted-button\"\r\n              >\r\n                Edit\r\n              </button>\r\n              <button\r\n                onClick={() => props.deleteUser(user.id)}\r\n                className=\"button muted-button\"\r\n              >\r\n                Delete\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        ))\r\n      ) : (\r\n        <tr>\r\n          <td colSpan={3}>No users</td>\r\n        </tr>\r\n      )}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nexport default UserTable;\r\n","import styled from \"styled-components\";\r\n\r\nconst Card = styled.div`\r\n  box-sizing: border-box;\r\n  max-width: 410px;\r\n  margin: 0 auto;\r\n  padding: 0 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 1rem;\r\n  border: 1px solid #999;\r\n  margin-bottom: 1rem;\r\n  font-size: 0.8rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background: linear-gradient(to bottom, #6371c7, #5563c1);\r\n  border-color: #3f4eae;\r\n  border-radius: 3px;\r\n  padding: 1rem;\r\n  color: white;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  margin-bottom: 1rem;\r\n  font-size: 0.8rem;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  width: 50%;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst Error = styled.div`\r\n  background-color: red;\r\n`;\r\n\r\nexport { Form, Input, Button, Logo, Card, Error };\r\n","import React, { useState, Fragment } from \"react\";\r\nimport AddUserForm from \"./forms/AddUserForm\";\r\nimport EditUserForm from \"./forms/EditUserForm\";\r\nimport UserTable from \"./tables/UserTable\";\r\nimport ToggleDisplay from \"react-toggle-display\";\r\nimport { Button } from \"./forms/AuthForm\";\r\nimport { useAuth } from \"../context/auth\";\r\n\r\nconst Admin = () => {\r\n  // Data\r\n  const usersData = [\r\n    {\r\n      id: 1,\r\n      gameId: \"1029238\",\r\n      name: \"Tania\",\r\n      username: \"floppydiskette\",\r\n      joinTime: \"1995-12-17 03:24\",\r\n      identity: \"股東/會長\",\r\n    },\r\n    {\r\n      id: 2,\r\n      gameId: \"1293920\",\r\n      name: \"Tony\",\r\n      username: \"aaaaaaaaaaaaa\",\r\n      joinTime: \"1995-12-17 03:24\",\r\n      identity: \"總代理/副會長\",\r\n    },\r\n    {\r\n      id: 3,\r\n      gameId: \"0293818\",\r\n      name: \"Frank\",\r\n      username: \"qwefa\",\r\n      joinTime: \"1995-12-17 03:24\",\r\n      identity: \"代理/副會長\",\r\n    },\r\n  ];\r\n\r\n  const initialFormState = {\r\n    id: null,\r\n    gameId: \"\",\r\n    name: \"\",\r\n    username: \"\",\r\n    joinTime: \"\",\r\n    identity: \"\",\r\n  };\r\n\r\n  // Setting state\r\n  const [users, setUsers] = useState(usersData);\r\n  const [currentUser, setCurrentUser] = useState(initialFormState);\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  // CRUD operations\r\n  const addUser = (user) => {\r\n    user.id = users.length + 1;\r\n    setUsers([...users, user]);\r\n  };\r\n\r\n  const deleteUser = (id) => {\r\n    setEditing(false);\r\n\r\n    setUsers(users.filter((user) => user.id !== id));\r\n  };\r\n\r\n  const updateUser = (id, updatedUser) => {\r\n    setEditing(false);\r\n\r\n    setUsers(users.map((user) => (user.id === id ? updatedUser : user)));\r\n  };\r\n\r\n  const editRow = (user) => {\r\n    setEditing(true);\r\n\r\n    setCurrentUser({\r\n      id: user.id,\r\n      name: user.name,\r\n      username: user.username,\r\n      gameId: user.gameId,\r\n      joinTime: user.joinTime,\r\n      identity: user.identity,\r\n    });\r\n  };\r\n\r\n  //Edit display\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setShow(!show);\r\n  };\r\n\r\n  //logout\r\n\r\n  const { setAuthTokens } = useAuth();\r\n\r\n  function logOut() {\r\n    setAuthTokens();\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Button style={{ width: \"82px\" }} onClick={logOut}>\r\n        Log out\r\n      </Button>\r\n      <div className=\"flex-row\" style={{ position: \"relative\" }}>\r\n        <ToggleDisplay show={show}>\r\n          <div\r\n            className=\"flex-large\"\r\n            style={{\r\n              position: \"absolute\",\r\n              backgroundColor: \"white\",\r\n              top: \"32px\",\r\n              left: \"300px\",\r\n              border: \"2px solid black\",\r\n              width: \"600px\",\r\n            }}\r\n          >\r\n            {editing ? (\r\n              <Fragment>\r\n                <h2>Edit user</h2>\r\n                <EditUserForm\r\n                  handleClick={handleClick}\r\n                  editing={editing}\r\n                  setEditing={setEditing}\r\n                  currentUser={currentUser}\r\n                  updateUser={updateUser}\r\n                />\r\n              </Fragment>\r\n            ) : (\r\n              <Fragment>\r\n                <h2>Add user</h2>\r\n                <AddUserForm addUser={addUser} handleClick={handleClick} />\r\n              </Fragment>\r\n            )}\r\n          </div>\r\n        </ToggleDisplay>\r\n        <div className=\"flex-large\">\r\n          <h2>俱樂部會員({users.length}/500)</h2>\r\n          <button onClick={handleClick}>Add user</button>\r\n          <UserTable\r\n            users={users}\r\n            editRow={editRow}\r\n            deleteUser={deleteUser}\r\n            handleClick={handleClick}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Card, Form, Input, Button, Error } from \"../component/forms/AuthForm\";\r\nimport { useAuth } from \"../context/auth\";\r\n\r\nfunction Login() {\r\n  const [isLoggedIn, setLoggedIn] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { setAuthTokens } = useAuth();\r\n\r\n  function postLogin() {\r\n    axios\r\n      .post(\"https://www.somePlace.com/auth/login\", {\r\n        userName,\r\n        password,\r\n      })\r\n      .then((result) => {\r\n        if (result.status === 200) {\r\n          setAuthTokens(result.data);\r\n          setLoggedIn(true);\r\n        } else {\r\n          setIsError(true);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        setIsError(true);\r\n      });\r\n  }\r\n\r\n  if (isLoggedIn) {\r\n    return <Redirect to=\"/admin\" />;\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Form>\r\n        <Input\r\n          type=\"username\"\r\n          value={userName}\r\n          onChange={(e) => {\r\n            setUserName(e.target.value);\r\n          }}\r\n          placeholder=\"email\"\r\n        />\r\n        <Input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => {\r\n            setPassword(e.target.value);\r\n          }}\r\n          placeholder=\"password\"\r\n        />\r\n        <Button\r\n          onClick={() => {\r\n            setLoggedIn(true);\r\n            setAuthTokens({\r\n              authTokens: \"some token string\",\r\n              setAuthTokens: console.log(\"\"),\r\n            });\r\n          }}\r\n        >\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n      <Link to=\"/signup\">Don't have an account?</Link>\r\n      {isError && (\r\n        <Error>The username or password provided were incorrect!</Error>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Logo, Form, Input, Button } from \"../component/forms/AuthForm\";\r\n\r\nfunction Signup() {\r\n  return (\r\n    <Card>\r\n      <Form>\r\n        <Input type=\"email\" placeholder=\"email\" />\r\n        <Input type=\"password\" placeholder=\"password\" />\r\n        <Input type=\"password\" placeholder=\"password again\" />\r\n        <Button>Sign Up</Button>\r\n      </Form>\r\n      <Link to=\"/login\">Already have an account?</Link>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import React, { useState } from \"react\";\nimport Home from \"./component/Home\";\nimport PrivateRoute from \"./component/PrivateRoute\";\nimport { AuthContext } from \"./context/auth\";\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\nimport Admin from \"./component/Admin\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\n\nconst App = () => {\n  localStorage.clear();\n  const existingTokens = JSON.parse(localStorage.getItem(\"tokens\"));\n  const [authTokens, setAuthTokens] = useState(existingTokens);\n\n  const setTokens = (data) => {\n    localStorage.setItem(\"tokens\", JSON.stringify(data));\n    setAuthTokens(data);\n  };\n\n  return (\n    <AuthContext.Provider value={{ authTokens, setAuthTokens: setTokens }}>\n      <Router>\n        <div>\n          <ul>\n            <li>\n              <Link to=\"/\">Home Page</Link>\n            </li>\n            <li>\n              <Link to=\"/admin\">Admin Page</Link>\n            </li>\n          </ul>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/signup\" component={Signup} />\n          <PrivateRoute path=\"/admin\" component={Admin} />\n        </div>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}